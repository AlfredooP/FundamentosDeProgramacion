/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fd_22130803_proyecto_04;

import java.awt.Color;
import java.util.Arrays;
import java.util.Random;
import javax.swing.JOptionPane;

/**
 *
 * @author alfre
 */
public class FD_22130803_Frame_04 extends javax.swing.JFrame {

    /**
     * Creates new form FD_22130803_Frame_04
     */
    
    //Declaración de variables universales
    boolean generados = false; //Ésta variable pregunta si se han generado datos válidos para realizar los procesos
    int renglones = 0;
    int columnas = 0;
    int r, c;
    
    //Declaramos el arreglo bidimensional "datos"
    int [][] datos;
    
    
    public FD_22130803_Frame_04() {
        initComponents();
        getContentPane().setBackground(Color.black); //Cambia el color de fondo a negro
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jSpinnerRenglones = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();
        jSpinnerColumnas = new javax.swing.JSpinner();
        jButtonEjemplo = new javax.swing.JButton();
        jButtonAleatorios = new javax.swing.JButton();
        jButtonBorrar = new javax.swing.JButton();
        jButtonDimensionar = new javax.swing.JButton();
        jButtonDescendente = new javax.swing.JButton();
        jButtonSobrepasan = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaOriginal = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaProcesada = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabelProceso = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 255));
        jLabel1.setText("PROYECTO 4 - PUENTES VARGAS ALFREDO - 22130803");
        jLabel1.setOpaque(true);

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 3, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 204, 255));
        jLabel2.setText("PROGRAMA QUE PROCESA LOS DATOS DE UNA MATRIZ GENERADA A DECISIÓN DEL USUARIO ");
        jLabel2.setOpaque(true);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fd_22130803_proyecto_04/asignacion.png"))); // NOI18N

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fd_22130803_proyecto_04/ejemplo.png"))); // NOI18N

        jLabel4.setBackground(new java.awt.Color(0, 0, 0));
        jLabel4.setFont(new java.awt.Font("Comic Sans MS", 3, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 204, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Desarrollar una aplicación Java Visual que permita");
        jLabel4.setOpaque(true);

        jLabel6.setBackground(new java.awt.Color(0, 0, 0));
        jLabel6.setFont(new java.awt.Font("Comic Sans MS", 3, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(204, 204, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("procesar los datos de una matriz, preguntando al");
        jLabel6.setOpaque(true);

        jLabel7.setBackground(new java.awt.Color(0, 0, 0));
        jLabel7.setFont(new java.awt.Font("Comic Sans MS", 3, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(204, 204, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("usuario el número de renglones y columnas.");
        jLabel7.setOpaque(true);

        jLabel8.setBackground(new java.awt.Color(0, 0, 0));
        jLabel8.setFont(new java.awt.Font("Comic Sans MS", 3, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(204, 204, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("__________________________________________________________________________________________________");
        jLabel8.setOpaque(true);

        jLabel9.setBackground(new java.awt.Color(204, 204, 255));
        jLabel9.setFont(new java.awt.Font("Century Gothic", 3, 14)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Número de Renglones:");
        jLabel9.setOpaque(true);

        jSpinnerRenglones.setFont(new java.awt.Font("Century Gothic", 3, 14)); // NOI18N

        jLabel10.setBackground(new java.awt.Color(204, 204, 255));
        jLabel10.setFont(new java.awt.Font("Century Gothic", 3, 14)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Número de Columnas:");
        jLabel10.setOpaque(true);

        jSpinnerColumnas.setFont(new java.awt.Font("Century Gothic", 3, 14)); // NOI18N

        jButtonEjemplo.setBackground(new java.awt.Color(153, 204, 255));
        jButtonEjemplo.setFont(new java.awt.Font("Century Gothic", 3, 12)); // NOI18N
        jButtonEjemplo.setText("EJEMPLO");
        jButtonEjemplo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEjemploActionPerformed(evt);
            }
        });

        jButtonAleatorios.setBackground(new java.awt.Color(153, 204, 255));
        jButtonAleatorios.setFont(new java.awt.Font("Century Gothic", 3, 12)); // NOI18N
        jButtonAleatorios.setText("ALEATORIOS");
        jButtonAleatorios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAleatoriosActionPerformed(evt);
            }
        });

        jButtonBorrar.setBackground(new java.awt.Color(153, 204, 255));
        jButtonBorrar.setFont(new java.awt.Font("Century Gothic", 3, 12)); // NOI18N
        jButtonBorrar.setText("BORRAR");
        jButtonBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBorrarActionPerformed(evt);
            }
        });

        jButtonDimensionar.setBackground(new java.awt.Color(255, 255, 255));
        jButtonDimensionar.setFont(new java.awt.Font("Century Gothic", 3, 12)); // NOI18N
        jButtonDimensionar.setText("DIMENSIONAR");
        jButtonDimensionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDimensionarActionPerformed(evt);
            }
        });

        jButtonDescendente.setBackground(new java.awt.Color(255, 255, 255));
        jButtonDescendente.setFont(new java.awt.Font("Century Gothic", 3, 12)); // NOI18N
        jButtonDescendente.setText("ORDENAR DESCENDENTE");
        jButtonDescendente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDescendenteActionPerformed(evt);
            }
        });

        jButtonSobrepasan.setBackground(new java.awt.Color(255, 255, 255));
        jButtonSobrepasan.setFont(new java.awt.Font("Century Gothic", 3, 12)); // NOI18N
        jButtonSobrepasan.setText("SOBREPASAN PROMEDIO");
        jButtonSobrepasan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSobrepasanActionPerformed(evt);
            }
        });

        jTextAreaOriginal.setBackground(new java.awt.Color(204, 204, 255));
        jTextAreaOriginal.setColumns(20);
        jTextAreaOriginal.setFont(new java.awt.Font("Century Gothic", 3, 13)); // NOI18N
        jTextAreaOriginal.setRows(5);
        jTextAreaOriginal.setText("(Establezca un tamaño de matriz)");
        jScrollPane1.setViewportView(jTextAreaOriginal);

        jTextAreaProcesada.setBackground(new java.awt.Color(204, 204, 255));
        jTextAreaProcesada.setColumns(20);
        jTextAreaProcesada.setFont(new java.awt.Font("Century Gothic", 3, 13)); // NOI18N
        jTextAreaProcesada.setRows(5);
        jTextAreaProcesada.setText("(Elija un proceso)");
        jScrollPane2.setViewportView(jTextAreaProcesada);

        jLabel11.setBackground(new java.awt.Color(0, 0, 0));
        jLabel11.setFont(new java.awt.Font("Century Gothic", 3, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(204, 204, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Matriz original:");
        jLabel11.setOpaque(true);

        jLabel12.setBackground(new java.awt.Color(0, 0, 0));
        jLabel12.setFont(new java.awt.Font("Century Gothic", 3, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(204, 204, 255));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Matriz procesada:");
        jLabel12.setOpaque(true);

        jLabelProceso.setBackground(new java.awt.Color(0, 0, 0));
        jLabelProceso.setFont(new java.awt.Font("Century Gothic", 3, 12)); // NOI18N
        jLabelProceso.setForeground(new java.awt.Color(204, 204, 255));
        jLabelProceso.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelProceso.setText("(Genere una matriz para continuar)");
        jLabelProceso.setOpaque(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(113, 113, 113)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(98, 98, 98)
                                .addComponent(jLabel2))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jSpinnerRenglones, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jSpinnerColumnas, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonEjemplo, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jButtonAleatorios, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jButtonBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3)
                                    .addGap(28, 28, 28)
                                    .addComponent(jLabel5))
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 891, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(123, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                            .addComponent(jButtonDimensionar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(279, 279, 279)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabelProceso, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jButtonDescendente, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButtonSobrepasan, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)))
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jSpinnerRenglones, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jSpinnerColumnas, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonEjemplo, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                        .addComponent(jButtonAleatorios, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                        .addComponent(jButtonBorrar, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonDimensionar, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(jButtonDescendente, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(jButtonSobrepasan, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jLabelProceso, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(52, 52, 52))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonEjemploActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEjemploActionPerformed
        
        //BOTON EJEMPLO
        
        //Cambiamos los valores de los "spinner" (Sólo como complemento visual pues la matriz se generará manualmente)
        jSpinnerRenglones.setValue(7);
        jSpinnerColumnas.setValue(5);
        
        //Borramos los datos anteriores
        jTextAreaOriginal.setText("");
        jTextAreaProcesada.setText("(Elija un proceso)");
        
        //Cambiamos enunciado de proceso
        jLabelProceso.setText("Se han generado los datos de ejemplo");
        
        //Establecemos la matriz separando los renglones con un salto de línea
        jTextAreaOriginal.append("25  12  10  39  47");
        jTextAreaOriginal.append("\n");
        jTextAreaOriginal.append("92  25  48  10  63");
        jTextAreaOriginal.append("\n");
        jTextAreaOriginal.append("18  37  90  43  44");
        jTextAreaOriginal.append("\n");
        jTextAreaOriginal.append("62  19  16  34  68");
        jTextAreaOriginal.append("\n");
        jTextAreaOriginal.append("31  84  75  59  58");
        jTextAreaOriginal.append("\n");
        jTextAreaOriginal.append("49  27  16  64  60");
        jTextAreaOriginal.append("\n");
        jTextAreaOriginal.append("32  87  37  32  82");
        
        //Informamos que se han generado datos
        generados = true;
        
    }//GEN-LAST:event_jButtonEjemploActionPerformed

    private void jButtonAleatoriosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAleatoriosActionPerformed
        
        //BOTON ALEATORIOS
        
        //Leemos los valores
        renglones = (int)jSpinnerRenglones.getValue();
        columnas = (int)jSpinnerColumnas.getValue();
        
        //Comprobamos que los valores sean correctos
        if(renglones < 1 || columnas < 1)
            JOptionPane.showMessageDialog(rootPane, "No es posible generar una matriz de esas dimensiones, intente de nuevo");
        else
        {
             //Asignamos los valores al arreglo "datos"
            datos = new int[renglones][columnas];
        
            //Utilizamos la librería "Random"
            Random azar = new Random();
        
            //Borramos los datos de las matrices anteriores
            jTextAreaOriginal.setText("");
            jTextAreaProcesada.setText("(Elija un proceso)");
            
            //Cambiamos enunciado de proceso
            jLabelProceso.setText("Se han generado datos aleatorios");
        
            //Generamos los datos hasta que los renglones y columnas coincidan con los solicitados
            for(r=0; r<datos.length; r++)
            {
                for(c=0; c<datos[r].length; c++)
                    jTextAreaOriginal.append((10 + azar.nextInt(90)) + "  ");
            
                //Separamos los renglones con un salto de línea
                jTextAreaOriginal.append("\n");
            }
            
            //Informamos que se han generado datos
            generados = true;
        }
        
    }//GEN-LAST:event_jButtonAleatoriosActionPerformed

    private void jButtonDimensionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDimensionarActionPerformed
        
        //BOTON DIMENSIONAR
        
        //Leemos los valores
        renglones = (int)jSpinnerRenglones.getValue();
        columnas = (int)jSpinnerColumnas.getValue();
        
        //Comprobamos que los valores sean correctos
        if(renglones < 1 || columnas < 1)
            JOptionPane.showMessageDialog(rootPane, "No es posible generar una matriz de esas dimensiones, intente de nuevo");
        else
        {
             //Asignamos los valores al arreglo "datos"
            datos = new int[renglones][columnas];
            
            //Borramos los datos de las matrices anteriores
            jTextAreaOriginal.setText("");
            jTextAreaProcesada.setText("(Elija un proceso)");
            
            //Cambiamos enunciado de proceso
            jLabelProceso.setText("Se ha dimensionado una matriz de " + renglones + "x" + columnas);
        
            //Generaremos ceros hasta que los renglones y columnas coincidan con los solicitados
            for(r=0; r<datos.length; r++)
            {
                for(c=0; c<datos[0].length; c++)
                    jTextAreaOriginal.append(datos[r][c] + "  ");
            
                //Separamos los renglones con un salto de línea
                jTextAreaOriginal.append("\n");
            }
            
            //Informamos que se han generado datos
            generados = true;
        }
        
    }//GEN-LAST:event_jButtonDimensionarActionPerformed

    private void jButtonBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBorrarActionPerformed
        
        //BOTÓN BORRAR
        
        //Borramos los valores de los "spinner"
        jSpinnerRenglones.setValue(0);
        jSpinnerColumnas.setValue(0);
        
        //Borramos los datos de las matrices y etiquetas
        jTextAreaOriginal.setText("(Establezca un tamaño de matriz)");
        jTextAreaProcesada.setText("(Elija un proceso)");
        jLabelProceso.setText("(Genere una matriz para continuar)");
        
        //Informamos que se han borrado los datos
        generados = false;
        
    }//GEN-LAST:event_jButtonBorrarActionPerformed

    private void jButtonDescendenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDescendenteActionPerformed
        
        //BOTÓN ORDENAR DESCENDENTE
        
        //Preguntamos si se han generado datos
        if (generados == false)
            JOptionPane.showMessageDialog(rootPane, "No se han generado datos, no es posible realizar el proceso");
        else
        {
            //Declaración de variables
            double promedio;
            double suma = 4.5;
            
            //Leemos los valores
            renglones = (int)jSpinnerRenglones.getValue();
            columnas = (int)jSpinnerColumnas.getValue();
            
             //Asignamos los valores al arreglo "datos"
            datos = new int[renglones][columnas];
            
            //Cambiamos enunciado de proceso
            jLabelProceso.setText("Se ha ordenado de forma descendente");
            
            //Borramos el proceso anterior
            jTextAreaProcesada.setText("");

            //Ordenamos los valores del arreglo "datos"
            Arrays.sort(datos);
            
            //Ordenamos la matriz en orden inverso
            for(c=0; c<datos[0].length-1; c--)
            {
                for(r=0; r<datos.length-1; r--)
                {
                    jTextAreaProcesada.append(datos[r][c] + "");
                }
                jTextAreaProcesada.append("\n");
            }
            
        }
        
    }//GEN-LAST:event_jButtonDescendenteActionPerformed

    private void jButtonSobrepasanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSobrepasanActionPerformed
        
        //BOTÓN SOBREPASAN PROMEDIO
        //Preguntamos si se han generado datos
        if (generados == false)
            JOptionPane.showMessageDialog(rootPane, "No se han generado datos, no es posible realizar el proceso");
        else
        {
            //Declaración de variables
            double promedio;
            double suma = 4.5;
            
            //Leemos los valores
            renglones = (int)jSpinnerRenglones.getValue();
            columnas = (int)jSpinnerColumnas.getValue();
            
             //Asignamos los valores al arreglo "datos"
            datos = new int[renglones][columnas];
            
            //Borramos el proceso anterior
            jTextAreaProcesada.setText("");
            
            //Cambiamos enunciado de proceso
            jLabelProceso.setText("Se muestran los mayores al promedio");
            
            //Calculamos la suma y el promedio general
            for(c=0; c<datos[0].length; c++)
            {
                for(r=0; r<datos.length; r++)
                {
                    suma = suma + datos[r][c];  
                }
                
            }
            promedio = suma / (datos.length * datos[0].length);
            
            for(c=0; c<datos[0].length; c++)
            {
                for(r=0; r<datos.length; r++)
                {
                    if (datos[r][c] > promedio)
                        jTextAreaProcesada.append(datos[r][c] + "  ");
                    else
                        jTextAreaProcesada.append("-");
                }
                
                jTextAreaProcesada.append("\n");
            }
        }
        
    }//GEN-LAST:event_jButtonSobrepasanActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FD_22130803_Frame_04.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FD_22130803_Frame_04.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FD_22130803_Frame_04.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FD_22130803_Frame_04.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FD_22130803_Frame_04().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAleatorios;
    private javax.swing.JButton jButtonBorrar;
    private javax.swing.JButton jButtonDescendente;
    private javax.swing.JButton jButtonDimensionar;
    private javax.swing.JButton jButtonEjemplo;
    private javax.swing.JButton jButtonSobrepasan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelProceso;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner jSpinnerColumnas;
    private javax.swing.JSpinner jSpinnerRenglones;
    private javax.swing.JTextArea jTextAreaOriginal;
    private javax.swing.JTextArea jTextAreaProcesada;
    // End of variables declaration//GEN-END:variables
}
